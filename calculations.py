# -*- coding: utf-8 -*-
"""Calculations.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/120U37NHOP8DLDDpyjTXhccrd0yei9z3h
"""

import pandas as pd

from transformers import T5ForConditionalGeneration, T5Tokenizer
import torch

model_name = "t5-small"
model = T5ForConditionalGeneration.from_pretrained(model_name)
tokenizer = T5Tokenizer.from_pretrained(model_name)

df = pd.read_csv('calculations.csv')
df.head(40)

questions = list(df['input'])
answers = list(df['output'])

inputs = tokenizer(questions, return_tensors = 'pt', padding= True, truncation=True)
labels = tokenizer(answers, return_tensors = 'pt', padding=True, truncation=True).input_ids

optimizer = torch.optim.Adam(model.parameters(), lr=5e-5)
model.train()

for epoch in range(5):
  optimizer.zero_grad()
  outputs = model(**inputs, labels = labels)
  loss = outputs.loss
  loss.backward()
  optimizer.step()
  print(f"Epoch {epoch} Loss: {loss.item()}")

model.eval()

new_question = "Multiply 9 with 9"
input_ids = tokenizer(new_question, return_tensors='pt').input_ids
with torch.no_grad():
  generated_ids = model.generate(input_ids)
  structured_output = tokenizer.decode(generated_ids[0],skip_special_tokens=True)
  print(structured_output)

operation = structured_output.split(" ")

if(operation[0]== 'sum'):
  print(int(operation[1]) + int(operation[2]))
elif(operation[0]== 'subtract'):
  print(int(operation[2]) - int(operation[1]))
elif(operation[0]=='multipli'):
  print(int(operation[1]) * int(operation[2]))